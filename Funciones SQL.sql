create or replace FUNCTION CALCULAR_PEDIDO(
P_PEDIDO IN E_DETALLEPEDIDOS.CODIGOPEDIDO%TYPE
)
RETURN NUMBER
IS
V_PRECIO_TOTAL NUMBER;

CURSOR C_PEDIDO IS select  D.CODIGOPEDIDO,D.CODIGOPRODUCTO,D.UNIDADESPEDIDAS, P.PRECIOVENTA
from E_DETALLEPEDIDOS D, E_PRODUCTOS P
WHERE D.CODIGOPRODUCTO=P.CODIGOPRODUCTO AND D.CODIGOPEDIDO=1
ORDER BY  D.CODIGOPEDIDO;

BEGIN
V_PRECIO_TOTAL:=0;


FOR V_REGISTRO IN C_PEDIDO LOOP
IF(V_REGISTRO.UNIDADESPEDIDAS >5 AND V_REGISTRO.UNIDADESPEDIDAS >=10) THEN
V_REGISTRO.PRECIOVENTA:=(V_REGISTRO.PRECIOVENTA)*0.95;
END IF;
IF(V_REGISTRO.UNIDADESPEDIDAS >10 AND V_REGISTRO.UNIDADESPEDIDAS >=15) THEN
V_REGISTRO.PRECIOVENTA:=(V_REGISTRO.PRECIOVENTA)*0.93;
END IF;
IF (V_REGISTRO.UNIDADESPEDIDAS<15) THEN
V_REGISTRO.PRECIOVENTA:=(V_REGISTRO.PRECIOVENTA)*0.9;
END IF;
V_PRECIO_TOTAL:=V_PRECIO_TOTAL+(V_REGISTRO.PRECIOVENTA*V_REGISTRO.UNIDADESPEDIDAS);
END LOOP;

IF V_PRECIO_TOTAL<=0 THEN
RAISE_APPLICATION_ERROR(-20503,'EL NUMERO DE PEDIDO INTRODUCIDO NO EXISTE');
END IF;

RETURN V_PRECIO_TOTAL;
DBMS_OUTPUT.PUT_LINE (V_PRECIO_TOTAL);

EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE ('SE HA PRODUCIDO UN ERROR');
    ROLLBACK;
END CALCULAR_PEDIDO;


/* Para hacer una llamada a la función creada se utiliaría el siguiente código
DECLARE
V_PRECIO NUMBER;
V_CODIGOPEDIDO NUMBER:=1;
BEGIN
V_CODIGOPEDIDO:=1;
V_PRECIO:=CALCULAR_PRECIO(V_CODIGOPEDIDO);
DBMS_OUTPUT.PUT_LINE('EL PRECIO DEL PEDIDO CON DESCUENTOS INCLUIDOS ES: '||V_PRECIO);
END;
*/
